// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stronger.Infrastructure.Persistence;

#nullable disable

namespace Stronger.Infrastructure.Migrations
{
    [DbContext(typeof(StrongerDbContext))]
    [Migration("20250916132206_AddWorkoutPlan")]
    partial class AddWorkoutPlan
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Stronger.Domain.Entities.ExerciseEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExerciseType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ForceType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameNormalized")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PrimaryMuscleGroup")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondaryMuscleGroup")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NameNormalized")
                        .IsUnique();

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Stronger.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Stronger.Domain.Entities.WorkoutPlanEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("Stronger.Domain.Entities.WorkoutPlanExerciseEntity", b =>
                {
                    b.Property<long>("ExerciseId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorkoutPlanId")
                        .HasColumnType("bigint");

                    b.HasKey("ExerciseId", "WorkoutPlanId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("WorkoutPlanExercises");
                });

            modelBuilder.Entity("Stronger.Domain.Entities.WorkoutPlanEntity", b =>
                {
                    b.HasOne("Stronger.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Stronger.Domain.Entities.WorkoutPlanExerciseEntity", b =>
                {
                    b.HasOne("Stronger.Domain.Entities.ExerciseEntity", null)
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stronger.Domain.Entities.WorkoutPlanEntity", null)
                        .WithMany()
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
